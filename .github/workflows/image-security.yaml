on:
  workflow_call:
    inputs:
      upload-sarif:
        required: false
        default: false
        type: boolean
        description: "Upload SARIF file to GitHub Security tab, by default it is false. When setting to true it requires write access to the security-events permission (see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions)"
      image:
        required: false
        default: ""
        type: string
        description: "Image to scan, by default it is empty. If set, it will scan the image and upload the results to the GitHub Security tab"
      login-aws:
        required: false
        default: false
        type: boolean
        description: "Login to AWS ECR, by default it is false. If true, expects aws-region, aws-access-key-id and aws-secret-access-key to be set"
      aws-region:
        required: false
        default: ""
        type: string
        description: "AWS region to use for ECR login"
      login-ghcr:
        required: false
        default: false
        type: boolean
        description: "Login to GitHub Container Registry, by default it is false"
      ghcr-username:
        required: false
        default: ""
        type: string
        description: "GitHub Container Registry username to use for login"
    secrets:
      aws-access-key-id:
        required: false
        description: "AWS access key ID to use for ECR login"
      aws-secret-access-key:
        required: false
        description: "AWS secret access key to use for ECR login"
      ghcr-token:
        required: false
        description: "GitHub Container Registry token to use for login"

jobs:
  SAST:
    name: SAST
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v5

    - name: Run Trivy image scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: "fs"
        security-checks: "vuln,secret,config"
        ignore-unfixed: true
        format: "sarif"
        output: "trivy-sast.sarif"
        severity: "CRITICAL,HIGH"

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      if: ${{ !cancelled() && inputs.upload-sarif }}
      with:
        sarif_file: "trivy-sast.sarif"

  Image:
    name: Image scanning
    runs-on: ubuntu-latest
    if: ${{ inputs.login-aws || inputs.login-ghcr }}
    steps:

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v4
        if: ${{ !cancelled() && inputs.login-aws }}
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}

      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v2
        if: ${{ !cancelled() && inputs.login-aws }}
        with:
          mask-password: "true"

      - name: Login to GHCR
        uses: docker/login-action@v3
        if: ${{ !cancelled() && inputs.login-ghcr }}
        with:
          registry: ghcr.io
          username: ${{ inputs.ghcr-username }}
          password: ${{ secrets.ghcr-token }}

      - name: Scan image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ inputs.image }}
          vuln-type: "os,library"
          ignore-unfixed: true
          format: "sarif"
          output: "trivy-image.sarif"
          severity: "CRITICAL,HIGH"

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: ${{ !cancelled() && inputs.upload-sarif }}
        with:
          sarif_file: "trivy-image.sarif"
          category: "image"
