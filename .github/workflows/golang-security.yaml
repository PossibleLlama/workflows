on:
  workflow_call:
    inputs:
      working-directory:
        required: false
        default: "./"
        type: string
        description: "Working directory to base all other paths on. Should end with a slash (/)"
      mod-path:
        required: false
        default: "./go.mod"
        type: string
        description: "Path to the go.mod file, by default it is assumed to be in the root of the repository"
      upload-sarif:
        required: false
        default: false
        type: boolean
        description: "Upload SARIF file to GitHub Security tab, by default it is false. When setting to true it requires write access to the security-events permission (see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions)"

jobs:
  SCA:
    name: SCA
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Go 1.x
      uses: actions/setup-go@v6
      with:
        go-version-file: "${{ inputs.working-directory }}${{ inputs.mod-path }}"
        cache-dependency-path: "${{ inputs.working-directory }}go.sum"

    - name: Write Go List
      run: go list -json -m > go.list
      working-directory: ${{ inputs.working-directory }}

    # TODO check on progress of https://github.com/golang/go/issues/61347
    - name: Govulncheck
      uses: golang/govulncheck-action@v1
      with:
        go-package: "./..."
        work-dir: ${{ inputs.working-directory }}
        go-version-file: "${{ inputs.working-directory }}${{ inputs.mod-path }}"

  SAST:
    name: SAST
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go 1.x
        uses: actions/setup-go@v6
        with:
          go-version-file: "${{ inputs.working-directory }}${{ inputs.mod-path }}"
          cache-dependency-path: "${{ inputs.working-directory }}go.sum"

      # GoSec
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: '-no-fail -fmt sarif -out gosec.sarif ${{ inputs.working-directory }}...'

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v4
        if: ${{ !cancelled() && inputs.upload-sarif }}
        with:
          sarif_file: gosec.sarif

      # Github CodeQL
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v4
        with:
          languages: "go"

      - name: Autobuild
        uses: github/codeql-action/autobuild@v4

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v4
        if: ${{ !cancelled() && inputs.upload-sarif }}
