on:
  workflow_call:
    inputs:
      working-directory:
        required: false
        default: "./"
        type: string
        description: "Working directory to base all other paths on. Should end with a slash (/)"
      mod-path:
        required: false
        default: "./go.mod"
        type: string
        description: "Path to the go.mod file, by default it is assumed to be in the root of the repository"
      source-path:
        required: false
        default: "./main.go"
        type: string
        description: "Path to the source file containing the main function, by default it is assumed to be in the root of the repository"
      build-flags:
        required: false
        default: "-ldflags=\"-w -s\""
        type: string
        description: "Flags to be passed to the build process"
      retention-days:
        required: false
        default: 2
        type: number
        description: "Number of days to keep the binary in the artifact store"
      os:
        required: false
        default: "linux"
        type: string
        description: "Target OS"
      arch:
        required: false
        default: "amd64"
        type: string
        description: "Target architecture"
      binary-prefix:
        required: false
        default: "Binaries-"
        type: string
        description: "Prefix for the binary name"
      artifact-postfix:
        required: false
        default: ""
        type: string
        description: "Postfix to append to the artifact name. Should start with a dash (-)"

jobs:
  binary:
    name: Binary
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version-file: "${{ inputs.working-directory }}${{ inputs.mod-path }}"
        cache-dependency-path: "${{ inputs.working-directory }}go.sum"

    - name: Get dependencies
      run: go mod download
      working-directory: ${{ inputs.working-directory }}

    - name: Build
      run: go build ${{ inputs.build-flags }} -o "./${{ github.repository }}-${{ inputs.os }}-${{ inputs.arch }}.${{ (inputs.os == 'windows' && 'exe') || 'bin' }}" ${{ inputs.source-path }}
      env:
        GOOS: ${{ inputs.os }}
        GOARCH: ${{ inputs.arch }}
      working-directory: ${{ inputs.working-directory }}

    - name: Sanitize artifact postfix
      id: sanitize-artifact-postfix
      uses: mad9000/actions-find-and-replace-string@5
      with:
          source: ${{ inputs.artifact-postfix }} 
          find: "/"
          replace: "-"
          replaceAll: true

    - name: Store binaries
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.binary-prefix }}${{ inputs.os }}-${{ inputs.arch }}${{ steps.sanitize-artifact-postfix.outputs.value }}
        path: ${{ inputs.working-directory }}${{ github.repository }}*
        if-no-files-found: ignore
        retention-days: ${{ inputs.retention-days }}
