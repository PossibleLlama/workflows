on:
  workflow_call:
    inputs:
      mod-path:
        required: false
        default: "./go.mod"
        type: string
        description: "Path to the go.mod file, by default it is assumed to be in the root of the repository"
      source-path:
        required: false
        default: "./main.go"
        type: string
        description: "Path to the source file containing the main function, by default it is assumed to be in the root of the repository"
      build-flags:
        required: false
        default: "-ldflags=\"-w -s\""
        type: string
        description: "Flags to be passed to the build process"
      retention-days:
        required: false
        default: 2
        type: number
        description: "Number of days to keep the binary in the artifact store"
      os:
        required: false
        default: "linux"
        type: string
        description: "Target OS"
      arch:
        required: false
        default: "amd64"
        type: string
        description: "Target architecture"
    outputs:
      binary:
        description: "Path to the binary file"
        value: ${{ jobs.binary.outputs.binary_path }}

jobs:
  binary:
    name: Binary
    runs-on: ubuntu-latest
    outputs:
      binary_path: ${{ steps.bin-ouput.outputs.binary_path }}
    steps:

    - name: Checkout code into the Go module directory
      uses: actions/checkout@v4

    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version-file: ${{ inputs.mod-path }}

    - name: Get dependencies
      run: go mod download

    - name: Build
      run: go build ${{ inputs.build-flags }} -o "./${{ github.repository }}-${{ inputs.os }}-${{ inputs.arch }}.${{ (inputs.os == 'windows' && 'exe') || 'bin' }}" ${{ inputs.source-path }}
      env:
        GOOS: ${{ inputs.os }}
        GOARCH: ${{ inputs.arch }}
  
    - name: Store binaries
      uses: actions/upload-artifact@v3
      with:
        path: ./${{ github.repository }}.*
        if-no-files-found: ignore
        retention-days: ${{ inputs.retention-days }}

    - name: Output binary path
      id: bin-ouput
      run: echo "binary_path=${{ github.repository }}-${{ inputs.os }}-${{ inputs.arch }}.${{ (inputs.os == 'windows' && 'exe') || 'bin' }}" >> $GITHUB_OUTPUT
